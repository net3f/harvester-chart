apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      initContainers:
      - name: wait-for-mariadb
        image: mysql
        command: ["/bin/sh"]
        args:
        - -c
        - while ! mysqladmin ping -h"{{ .Values.db.host }}" --silent; do sleep 3; done;
      - name: run-migrations
        image: {{ .Values.image.repo }}:{{ .Values.image.tag }}
        command: ["/bin/sh"]
        args:
        - -c
        - export PYTHONPATH=/usr/src/app:/usr/src/app/py-substrate-interface/:/usr/src/app/py-scale-codec/:$PYTHONPATH;
          alembic upgrade head
        env:
{{ include "harvester.api-worker-env" . | indent 8 }}
      containers:
      - name: {{ .Release.Name }}-api
        image: {{ .Values.image.repo }}:{{ .Values.image.tag }}
        imagePullPolicy: IfNotPresent
        ports:
        - name: endpoint
          containerPort: {{ .Values.port }}
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: {{ .Values.port }}
          initialDelaySeconds: 10
          timeoutSeconds: 200
        readinessProbe:
          httpGet:
            path: /status
            port: {{ .Values.port }}
          initialDelaySeconds: 20
          timeoutSeconds: 200
        {{ if ne .Values.environment "ci" }}
        resources:
{{ toYaml .Values.api.resources | indent 10 }}
        {{ end }}
        env:
{{ include "harvester.api-worker-env" . | indent 8 }}
      - name: {{ .Release.Name }}-worker
        image: {{ .Values.image.repo }}:{{ .Values.image.tag }}
        imagePullPolicy: IfNotPresent
        command: ["celery"]
        args:
        - -A
        - app.tasks
        - worker
        - --loglevel=INFO
        ports:
        - name: endpoint
          containerPort: {{ .Values.port }}
        {{ if ne .Values.environment "ci" }}
        resources:
{{ toYaml .Values.worker.resources | indent 10 }}
        {{ end }}
        env:
{{ include "harvester.api-worker-env" . | indent 8 }}
      - name: {{ .Release.Name }}-beat
        image: {{ .Values.image.repo }}:{{ .Values.image.tag }}
        imagePullPolicy: IfNotPresent
        command:
        - celery
        - -A
        - app.tasks
        - beat
        - --loglevel=INFO
        ports:
        - name: endpoint
          containerPort: {{ .Values.port }}
        {{ if ne .Values.environment "ci" }}
        resources:
{{ toYaml .Values.beat.resources | indent 10 }}
        {{ end }}
        env:
{{ include "harvester.base-env" . | indent 8 }}
